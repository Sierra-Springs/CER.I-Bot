<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Coucou 2" id="1" localization="8" tooltip="Mouvement par apprendissage" x="362" y="43"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="287"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram /></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="13" value="-67.4121" /><Key frame="26" value="-70.752" /><Key frame="38" value="-72.5977" /><Key frame="51" value="-73.6524" /><Key frame="63" value="-77.7832" /><Key frame="76" value="-82.2656" /><Key frame="88" value="-70.1367" /><Key frame="101" value="-69.2578" /><Key frame="113" value="-67.3242" /><Key frame="126" value="-67.2363" /><Key frame="138" value="-67.4121" /><Key frame="151" value="-67.8516" /><Key frame="163" value="-67.8516" /><Key frame="176" value="-67.5879" /><Key frame="188" value="-67.5879" /><Key frame="201" value="-67.8516" /><Key frame="213" value="-69.873" /><Key frame="226" value="-68.9063" /><Key frame="238" value="-67.0605" /><Key frame="251" value="-67.2363" /><Key frame="263" value="-67.1484" /><Key frame="276" value="-67.5879" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="13" value="-29.3555" /><Key frame="26" value="-29.5313" /><Key frame="38" value="-24.6094" /><Key frame="51" value="-18.3691" /><Key frame="63" value="-21.0059" /><Key frame="76" value="-21.4453" /><Key frame="88" value="-22.5" /><Key frame="101" value="-21.4453" /><Key frame="113" value="-21.4453" /><Key frame="126" value="-21.4453" /><Key frame="138" value="-22.4121" /><Key frame="151" value="-22.7637" /><Key frame="163" value="-22.7637" /><Key frame="176" value="-20.5664" /><Key frame="188" value="-22.1484" /><Key frame="201" value="-20.8301" /><Key frame="213" value="-21.4453" /><Key frame="226" value="-21.1816" /><Key frame="238" value="-21.1816" /><Key frame="251" value="-21.4453" /><Key frame="263" value="-21.2695" /><Key frame="276" value="-21.6211" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="12" value="0.2484" /><Key frame="25" value="0.2484" /><Key frame="37" value="0.2484" /><Key frame="50" value="0.2484" /><Key frame="62" value="0.2484" /><Key frame="75" value="0.2484" /><Key frame="87" value="0.2484" /><Key frame="100" value="0.2484" /><Key frame="112" value="0.2484" /><Key frame="125" value="0.2484" /><Key frame="137" value="0.2484" /><Key frame="150" value="0.2484" /><Key frame="162" value="0.2484" /><Key frame="175" value="0.2484" /><Key frame="187" value="0.2484" /><Key frame="200" value="0.2484" /><Key frame="212" value="0.2484" /><Key frame="225" value="0.2484" /><Key frame="237" value="0.2484" /><Key frame="250" value="0.2484" /><Key frame="262" value="0.2484" /><Key frame="275" value="0.2484" /><Key frame="287" value="0.2484" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="13" value="59.3262" /><Key frame="26" value="58.7109" /><Key frame="38" value="53.9648" /><Key frame="51" value="49.9219" /><Key frame="63" value="37.8809" /><Key frame="76" value="34.6289" /><Key frame="88" value="39.5508" /><Key frame="101" value="42.8027" /><Key frame="113" value="42.8906" /><Key frame="126" value="42.8906" /><Key frame="138" value="42.8027" /><Key frame="151" value="41.1328" /><Key frame="163" value="40.7813" /><Key frame="176" value="43.7695" /><Key frame="188" value="42.5391" /><Key frame="201" value="43.6816" /><Key frame="213" value="43.2422" /><Key frame="226" value="43.2422" /><Key frame="238" value="42.9785" /><Key frame="251" value="42.7148" /><Key frame="263" value="42.7148" /><Key frame="276" value="42.8027" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="13" value="11.7774" /><Key frame="26" value="16.6992" /><Key frame="38" value="20.3906" /><Key frame="51" value="23.9063" /><Key frame="63" value="32.7832" /><Key frame="76" value="48.0762" /><Key frame="88" value="61.3477" /><Key frame="101" value="60.7324" /><Key frame="113" value="60.8203" /><Key frame="126" value="61.2598" /><Key frame="138" value="61.4355" /><Key frame="151" value="61.5234" /><Key frame="163" value="61.875" /><Key frame="176" value="61.1719" /><Key frame="188" value="61.3477" /><Key frame="201" value="61.2598" /><Key frame="213" value="61.3477" /><Key frame="226" value="61.4355" /><Key frame="238" value="61.3477" /><Key frame="251" value="61.5234" /><Key frame="263" value="61.6113" /><Key frame="276" value="61.6113" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="13" value="46.1408" /><Key frame="26" value="18.2791" /><Key frame="38" value="9.66569" /><Key frame="51" value="10.0173" /><Key frame="63" value="8.61098" /><Key frame="76" value="8.4352" /><Key frame="88" value="3.51326" /><Key frame="101" value="7.99575" /><Key frame="113" value="0.43705" /><Key frame="126" value="-0.881327" /><Key frame="138" value="-8.5279" /><Key frame="151" value="-21.3601" /><Key frame="163" value="-30.5008" /><Key frame="176" value="4.83163" /><Key frame="188" value="-70.8431" /><Key frame="201" value="-0.61764" /><Key frame="213" value="-63.0208" /><Key frame="226" value="4.30429" /><Key frame="238" value="31.4628" /><Key frame="251" value="21.2674" /><Key frame="263" value="58.6214" /><Key frame="276" value="12.7419" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="12" value="85.0816" /><Key frame="25" value="85.0816" /><Key frame="37" value="88.5" /><Key frame="50" value="88.5" /><Key frame="62" value="69.1732" /><Key frame="75" value="2" /><Key frame="87" value="25.491" /><Key frame="100" value="27.5125" /><Key frame="112" value="28.4793" /><Key frame="125" value="2" /><Key frame="137" value="13.8014" /><Key frame="150" value="45.6182" /><Key frame="162" value="51.3312" /><Key frame="175" value="37.9716" /><Key frame="187" value="49.837" /><Key frame="200" value="65.5696" /><Key frame="212" value="87.8062" /><Key frame="225" value="85.521" /><Key frame="237" value="88.5" /><Key frame="250" value="87.6305" /><Key frame="262" value="87.982" /><Key frame="275" value="87.2789" /><Key frame="287" value="87.2789" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="12" value="28.1229" /><Key frame="25" value="28.1229" /><Key frame="37" value="27.5956" /><Key frame="50" value="26.0135" /><Key frame="62" value="42.3614" /><Key frame="75" value="60.4671" /><Key frame="87" value="49.5685" /><Key frame="100" value="43.4161" /><Key frame="112" value="32.2539" /><Key frame="125" value="13.6208" /><Key frame="137" value="12.9177" /><Key frame="162" value="7.95477" /><Key frame="187" value="4.65585" /><Key frame="200" value="4.74374" /><Key frame="212" value="22.4979" /><Key frame="225" value="32.3418" /><Key frame="237" value="32.6054" /><Key frame="250" value="27.5077" /><Key frame="262" value="27.5956" /><Key frame="275" value="28.2108" /><Key frame="287" value="28.2108" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="12" value="56.8683" /><Key frame="25" value="56.8683" /><Key frame="37" value="51.7706" /><Key frame="50" value="11.9557" /><Key frame="62" value="-32.5175" /><Key frame="75" value="-36.9121" /><Key frame="87" value="-58.2698" /><Key frame="100" value="-59.3245" /><Key frame="112" value="-57.5667" /><Key frame="125" value="-53.6994" /><Key frame="137" value="-65.5648" /><Key frame="150" value="-64.6859" /><Key frame="162" value="-64.7738" /><Key frame="175" value="-64.598" /><Key frame="187" value="-38.7579" /><Key frame="200" value="-19.7732" /><Key frame="212" value="-1.66754" /><Key frame="225" value="4.74855" /><Key frame="237" value="40.7842" /><Key frame="250" value="51.0675" /><Key frame="262" value="57.2199" /><Key frame="275" value="57.8352" /><Key frame="287" value="57.8352" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="12" value="-16.1745" /><Key frame="25" value="-16.1745" /><Key frame="37" value="-18.4597" /><Key frame="50" value="-38.1474" /><Key frame="62" value="-54.4074" /><Key frame="75" value="-64.5149" /><Key frame="87" value="-18.1081" /><Key frame="100" value="13.1813" /><Key frame="112" value="-33.4892" /><Key frame="125" value="-66.6243" /><Key frame="137" value="-22.6785" /><Key frame="150" value="4.12851" /><Key frame="162" value="-48.0792" /><Key frame="175" value="-63.4602" /><Key frame="187" value="-46.4092" /><Key frame="200" value="-37.2685" /><Key frame="212" value="-25.3152" /><Key frame="225" value="-18.5476" /><Key frame="237" value="-16.4382" /><Key frame="250" value="-15.2956" /><Key frame="262" value="-17.4929" /><Key frame="275" value="-17.6686" /><Key frame="287" value="-17.6686" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="12" value="28.8261" /><Key frame="25" value="28.8261" /><Key frame="37" value="28.7382" /><Key frame="50" value="53.7873" /><Key frame="62" value="66.8832" /><Key frame="75" value="63.5433" /><Key frame="87" value="57.4788" /><Key frame="100" value="64.598" /><Key frame="112" value="60.7308" /><Key frame="125" value="47.3712" /><Key frame="187" value="47.6349" /><Key frame="200" value="49.9201" /><Key frame="212" value="53.4358" /><Key frame="225" value="53.4358" /><Key frame="237" value="52.469" /><Key frame="250" value="51.8537" /><Key frame="262" value="51.7658" /><Key frame="275" value="52.3811" /><Key frame="287" value="52.3811" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Bumpers" id="2" localization="8" tooltip="Listen to bumpers sensors. Stimulate onLeft or onRight output depending on&#x0A;which bumper is stimulated." x="75" y="16"><bitmap>media/images/box/movement/move_foot.png</bitmap><bitmap>media/images/box/movement/move_leftfoot.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="LeftBumperPressed" type="0" type_size="1" nature="4" stm_value_name="LeftBumperPressed" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Input name="RightBumperPressed" type="0" type_size="1" nature="4" stm_value_name="RightBumperPressed" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="6" /><Output name="onLeft" type="1" type_size="1" nature="2" inner="0" tooltip="When left bumper is stimulated." id="7" /><Output name="onRight" type="1" type_size="1" nature="2" inner="0" tooltip="When right bumper is stimulated." id="8" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="196" y="61"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /></Box><Box name="If &gt; 0" id="4" localization="8" tooltip="Transmit only if value is &gt; 0." x="197" y="165"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="7" outputowner="2" indexofoutput="3" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="8" outputowner="4" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Motor On/Off" id="3" localization="8" tooltip="Stiffen or loosen all motors." x="212" y="33"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        pass

    def onInput_onSet(self):
        if( self.getParameter("Action") == "On" ):
            stiffness = 1
        else:
            stiffness = 0
        self.motion.post.stiffnessInterpolation("Body", stiffness, 0.1)
        time.sleep(0.1)
        self.onReady() #~ activate output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="3" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="4"><Choice value="Off" /><Choice value="On" /></Parameter></Box><Box name="Motor On/Off" id="4" localization="8" tooltip="Stiffen or loosen all motors." x="498" y="62"><bitmap>media/images/box/movement/stiffness.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.motion = ALProxy("ALMotion")

    def onUnload(self):
        pass

    def onInput_onSet(self):
        if( self.getParameter("Action") == "On" ):
            stiffness = 1
        else:
            stiffness = 0
        self.motion.post.stiffnessInterpolation("Body", stiffness, 0.1)
        time.sleep(0.1)
        self.onReady() #~ activate output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="3" /><Parameter name="Action" inherits_from_parent="0" content_type="3" value="Off" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="4"><Choice value="Off" /><Choice value="On" /></Parameter></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="7" /><Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="8" /><Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="3" /><Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>